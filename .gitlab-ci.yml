variables:
  DOCKERHUB_REPO_NAME: openvpn
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_TLS: 'true'
  DOCKER_HOST: tcp://docker:2376/
  ENABLE_ARM64: 'true'

services:
  - docker:dind

stages:
  - test
  - release

test:
  image: docker:latest
  stage: test
  before_script:
    - docker build --tag "${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}" .
    - docker inspect "${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}"
    - docker run --rm "${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}" openvpn --version || true # why does it return 1?
    - docker run --rm "${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}" openssl version
    - apk add --no-cache bash git iptables
    - git clone https://github.com/docker-library/official-images.git official-images
  script:
    - official-images/test/run.sh "$IMAGE"
    - test/run.sh "$IMAGE"
  only:
    - merge_requests

deploy:
  image: ixdotai/docker-buildx-qemu:latest
  stage: release
  before_script:
    - build/buildx-init.sh
    - build/docker-login.sh
  script:
    - export CI_BUILDX_ARCHS="$(cat /tmp/${CI_PROJECT_NAME}-${CI_COMMIT_SHA}-platforms)"
    - export TAG="${CI_COMMIT_REF_NAME}"
    - if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then export TAG="latest"; fi
    - export DESTINATIONS="--tag ${CI_REGISTRY_IMAGE}:${TAG}"
    - |
      if [ -n "${DOCKERHUB_USERNAME}" ] && [ -n "${DOCKERHUB_PASSWORD}" ]; then
        echo "Tagging with ${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}:${TAG}"
        export DESTINATIONS="${DESTINATIONS} --tag ${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}:${TAG}"
      fi
    - echo docker buildx build --platform="$CI_BUILDX_ARCHS" --progress=plain --pull --push ${DESTINATIONS} .
    - docker buildx build --platform="$CI_BUILDX_ARCHS" --progress=plain --pull --push ${DESTINATIONS} .
  after_script:
    - build/buildx-shutdown.sh
  only:
    - master
    - tags

dockerhub:readme:
  stage: release
  variables:
    README_PATH: ${CI_PROJECT_DIR}/README.md
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $DOCKERHUB_REPO_NAME =~ /.+/ && $DOCKERHUB_USERNAME =~ /.+/ && $DOCKERHUB_PASSWORD =~ /.+/'
      when: on_success
  image:
    name: sheogorath/readme-to-dockerhub:latest
    entrypoint: ['']
  script:
    - node /app/index.js

microbadger:
  stage: release
  rules:
    - if: '$MICROBADGER_TOKEN =~ /.+/ && $DOCKERHUB_REPO_NAME =~ /.+/'
      when: on_success
  image: alpine:latest
  script:
    - curl -V||apk add curl
    - curl -s -XPOST "https://hooks.microbadger.com/images/${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}/${MICROBADGER_TOKEN}"
